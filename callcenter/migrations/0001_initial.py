# Generated by Django 2.2 on 2019-09-10 11:09

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('call_type', models.CharField(choices=[('webrtc', 'Webrtc'), ('softcall', 'SoftCall')], default='webrtc', max_length=100)),
                ('user_timezone', models.CharField(choices=[('Africa/Abidjan', 'Africa/Abidjan'), ('Africa/Accra', 'Africa/Accra'), ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'), ('Africa/Algiers', 'Africa/Algiers'), ('Africa/Asmara', 'Africa/Asmara'), ('Africa/Bamako', 'Africa/Bamako'), ('Africa/Bangui', 'Africa/Bangui'), ('Africa/Banjul', 'Africa/Banjul'), ('Africa/Bissau', 'Africa/Bissau'), ('Africa/Blantyre', 'Africa/Blantyre'), ('Africa/Brazzaville', 'Africa/Brazzaville'), ('Africa/Bujumbura', 'Africa/Bujumbura'), ('Africa/Cairo', 'Africa/Cairo'), ('Africa/Casablanca', 'Africa/Casablanca'), ('Africa/Ceuta', 'Africa/Ceuta'), ('Africa/Conakry', 'Africa/Conakry'), ('Africa/Dakar', 'Africa/Dakar'), ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'), ('Africa/Djibouti', 'Africa/Djibouti'), ('Africa/Douala', 'Africa/Douala'), ('Africa/El_Aaiun', 'Africa/El_Aaiun'), ('Africa/Freetown', 'Africa/Freetown'), ('Africa/Gaborone', 'Africa/Gaborone'), ('Africa/Harare', 'Africa/Harare'), ('Africa/Johannesburg', 'Africa/Johannesburg'), ('Africa/Juba', 'Africa/Juba'), ('Africa/Kampala', 'Africa/Kampala'), ('Africa/Khartoum', 'Africa/Khartoum'), ('Africa/Kigali', 'Africa/Kigali'), ('Africa/Kinshasa', 'Africa/Kinshasa'), ('Africa/Lagos', 'Africa/Lagos'), ('Africa/Libreville', 'Africa/Libreville'), ('Africa/Lome', 'Africa/Lome'), ('Africa/Luanda', 'Africa/Luanda'), ('Africa/Lubumbashi', 'Africa/Lubumbashi'), ('Africa/Lusaka', 'Africa/Lusaka'), ('Africa/Malabo', 'Africa/Malabo'), ('Africa/Maputo', 'Africa/Maputo'), ('Africa/Maseru', 'Africa/Maseru'), ('Africa/Mbabane', 'Africa/Mbabane'), ('Africa/Mogadishu', 'Africa/Mogadishu'), ('Africa/Monrovia', 'Africa/Monrovia'), ('Africa/Nairobi', 'Africa/Nairobi'), ('Africa/Ndjamena', 'Africa/Ndjamena'), ('Africa/Niamey', 'Africa/Niamey'), ('Africa/Nouakchott', 'Africa/Nouakchott'), ('Africa/Ouagadougou', 'Africa/Ouagadougou'), ('Africa/Porto-Novo', 'Africa/Porto-Novo'), ('Africa/Sao_Tome', 'Africa/Sao_Tome'), ('Africa/Tripoli', 'Africa/Tripoli'), ('Africa/Tunis', 'Africa/Tunis'), ('Africa/Windhoek', 'Africa/Windhoek'), ('America/Adak', 'America/Adak'), ('America/Anchorage', 'America/Anchorage'), ('America/Anguilla', 'America/Anguilla'), ('America/Antigua', 'America/Antigua'), ('America/Araguaina', 'America/Araguaina'), ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'), ('America/Argentina/Catamarca', 'America/Argentina/Catamarca'), ('America/Argentina/Cordoba', 'America/Argentina/Cordoba'), ('America/Argentina/Jujuy', 'America/Argentina/Jujuy'), ('America/Argentina/La_Rioja', 'America/Argentina/La_Rioja'), ('America/Argentina/Mendoza', 'America/Argentina/Mendoza'), ('America/Argentina/Rio_Gallegos', 'America/Argentina/Rio_Gallegos'), ('America/Argentina/Salta', 'America/Argentina/Salta'), ('America/Argentina/San_Juan', 'America/Argentina/San_Juan'), ('America/Argentina/San_Luis', 'America/Argentina/San_Luis'), ('America/Argentina/Tucuman', 'America/Argentina/Tucuman'), ('America/Argentina/Ushuaia', 'America/Argentina/Ushuaia'), ('America/Aruba', 'America/Aruba'), ('America/Asuncion', 'America/Asuncion'), ('America/Atikokan', 'America/Atikokan'), ('America/Bahia', 'America/Bahia'), ('America/Bahia_Banderas', 'America/Bahia_Banderas'), ('America/Barbados', 'America/Barbados'), ('America/Belem', 'America/Belem'), ('America/Belize', 'America/Belize'), ('America/Blanc-Sablon', 'America/Blanc-Sablon'), ('America/Boa_Vista', 'America/Boa_Vista'), ('America/Bogota', 'America/Bogota'), ('America/Boise', 'America/Boise'), ('America/Cambridge_Bay', 'America/Cambridge_Bay'), ('America/Campo_Grande', 'America/Campo_Grande'), ('America/Cancun', 'America/Cancun'), ('America/Caracas', 'America/Caracas'), ('America/Cayenne', 'America/Cayenne'), ('America/Cayman', 'America/Cayman'), ('America/Chicago', 'America/Chicago'), ('America/Chihuahua', 'America/Chihuahua'), ('America/Costa_Rica', 'America/Costa_Rica'), ('America/Creston', 'America/Creston'), ('America/Cuiaba', 'America/Cuiaba'), ('America/Curacao', 'America/Curacao'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('America/Dawson', 'America/Dawson'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Denver', 'America/Denver'), ('America/Detroit', 'America/Detroit'), ('America/Dominica', 'America/Dominica'), ('America/Edmonton', 'America/Edmonton'), ('America/Eirunepe', 'America/Eirunepe'), ('America/El_Salvador', 'America/El_Salvador'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Fortaleza', 'America/Fortaleza'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Godthab', 'America/Godthab'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Grand_Turk', 'America/Grand_Turk'), ('America/Grenada', 'America/Grenada'), ('America/Guadeloupe', 'America/Guadeloupe'), ('America/Guatemala', 'America/Guatemala'), ('America/Guayaquil', 'America/Guayaquil'), ('America/Guyana', 'America/Guyana'), ('America/Halifax', 'America/Halifax'), ('America/Havana', 'America/Havana'), ('America/Hermosillo', 'America/Hermosillo'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('America/Inuvik', 'America/Inuvik'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Jamaica', 'America/Jamaica'), ('America/Juneau', 'America/Juneau'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Kralendijk', 'America/Kralendijk'), ('America/La_Paz', 'America/La_Paz'), ('America/Lima', 'America/Lima'), ('America/Los_Angeles', 'America/Los_Angeles'), ('America/Lower_Princes', 'America/Lower_Princes'), ('America/Maceio', 'America/Maceio'), ('America/Managua', 'America/Managua'), ('America/Manaus', 'America/Manaus'), ('America/Marigot', 'America/Marigot'), ('America/Martinique', 'America/Martinique'), ('America/Matamoros', 'America/Matamoros'), ('America/Mazatlan', 'America/Mazatlan'), ('America/Menominee', 'America/Menominee'), ('America/Merida', 'America/Merida'), ('America/Metlakatla', 'America/Metlakatla'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Miquelon', 'America/Miquelon'), ('America/Moncton', 'America/Moncton'), ('America/Monterrey', 'America/Monterrey'), ('America/Montevideo', 'America/Montevideo'), ('America/Montserrat', 'America/Montserrat'), ('America/Nassau', 'America/Nassau'), ('America/New_York', 'America/New_York'), ('America/Nipigon', 'America/Nipigon'), ('America/Nome', 'America/Nome'), ('America/Noronha', 'America/Noronha'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Panama', 'America/Panama'), ('America/Pangnirtung', 'America/Pangnirtung'), ('America/Paramaribo', 'America/Paramaribo'), ('America/Phoenix', 'America/Phoenix'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('America/Porto_Velho', 'America/Porto_Velho'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('America/Rainy_River', 'America/Rainy_River'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Recife', 'America/Recife'), ('America/Regina', 'America/Regina'), ('America/Resolute', 'America/Resolute'), ('America/Rio_Branco', 'America/Rio_Branco'), ('America/Santarem', 'America/Santarem'), ('America/Santiago', 'America/Santiago'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Sitka', 'America/Sitka'), ('America/St_Barthelemy', 'America/St_Barthelemy'), ('America/St_Johns', 'America/St_Johns'), ('America/St_Kitts', 'America/St_Kitts'), ('America/St_Lucia', 'America/St_Lucia'), ('America/St_Thomas', 'America/St_Thomas'), ('America/St_Vincent', 'America/St_Vincent'), ('America/Swift_Current', 'America/Swift_Current'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('America/Thule', 'America/Thule'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('America/Tijuana', 'America/Tijuana'), ('America/Toronto', 'America/Toronto'), ('America/Tortola', 'America/Tortola'), ('America/Vancouver', 'America/Vancouver'), ('America/Whitehorse', 'America/Whitehorse'), ('America/Winnipeg', 'America/Winnipeg'), ('America/Yakutat', 'America/Yakutat'), ('America/Yellowknife', 'America/Yellowknife'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Antarctica/McMurdo', 'Antarctica/McMurdo'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'), ('Asia/Aden', 'Asia/Aden'), ('Asia/Almaty', 'Asia/Almaty'), ('Asia/Amman', 'Asia/Amman'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Asia/Aqtau', 'Asia/Aqtau'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Asia/Bahrain', 'Asia/Bahrain'), ('Asia/Baku', 'Asia/Baku'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Asia/Barnaul', 'Asia/Barnaul'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Brunei', 'Asia/Brunei'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Asia/Famagusta', 'Asia/Famagusta'), ('Asia/Gaza', 'Asia/Gaza'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('Asia/Hovd', 'Asia/Hovd'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Asia/Kabul', 'Asia/Kabul'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('Asia/Karachi', 'Asia/Karachi'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Asia/Khandyga', 'Asia/Khandyga'), ('Asia/Kolkata', 'Asia/Kolkata'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Kuching', 'Asia/Kuching'), ('Asia/Kuwait', 'Asia/Kuwait'), ('Asia/Macau', 'Asia/Macau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Makassar', 'Asia/Makassar'), ('Asia/Manila', 'Asia/Manila'), ('Asia/Muscat', 'Asia/Muscat'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('Asia/Omsk', 'Asia/Omsk'), ('Asia/Oral', 'Asia/Oral'), ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Asia/Qatar', 'Asia/Qatar'), ('Asia/Qostanay', 'Asia/Qostanay'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Asia/Samarkand', 'Asia/Samarkand'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Asia/Singapore', 'Asia/Singapore'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Asia/Tokyo', 'Asia/Tokyo'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Asia/Vientiane', 'Asia/Vientiane'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('Asia/Yangon', 'Asia/Yangon'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Asia/Yerevan', 'Asia/Yerevan'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Atlantic/St_Helena', 'Atlantic/St_Helena'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('Australia/Adelaide', 'Australia/Adelaide'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Australia/Currie', 'Australia/Currie'), ('Australia/Darwin', 'Australia/Darwin'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Hobart', 'Australia/Hobart'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Australia/Perth', 'Australia/Perth'), ('Australia/Sydney', 'Australia/Sydney'), ('Canada/Atlantic', 'Canada/Atlantic'), ('Canada/Central', 'Canada/Central'), ('Canada/Eastern', 'Canada/Eastern'), ('Canada/Mountain', 'Canada/Mountain'), ('Canada/Newfoundland', 'Canada/Newfoundland'), ('Canada/Pacific', 'Canada/Pacific'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Europe/Andorra', 'Europe/Andorra'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Europe/Athens', 'Europe/Athens'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Europe/Berlin', 'Europe/Berlin'), ('Europe/Bratislava', 'Europe/Bratislava'), ('Europe/Brussels', 'Europe/Brussels'), ('Europe/Bucharest', 'Europe/Bucharest'), ('Europe/Budapest', 'Europe/Budapest'), ('Europe/Busingen', 'Europe/Busingen'), ('Europe/Chisinau', 'Europe/Chisinau'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Dublin', 'Europe/Dublin'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('Europe/Guernsey', 'Europe/Guernsey'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Isle_of_Man', 'Europe/Isle_of_Man'), ('Europe/Istanbul', 'Europe/Istanbul'), ('Europe/Jersey', 'Europe/Jersey'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('Europe/Kiev', 'Europe/Kiev'), ('Europe/Kirov', 'Europe/Kirov'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Europe/Ljubljana', 'Europe/Ljubljana'), ('Europe/London', 'Europe/London'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('Europe/Madrid', 'Europe/Madrid'), ('Europe/Malta', 'Europe/Malta'), ('Europe/Mariehamn', 'Europe/Mariehamn'), ('Europe/Minsk', 'Europe/Minsk'), ('Europe/Monaco', 'Europe/Monaco'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Oslo', 'Europe/Oslo'), ('Europe/Paris', 'Europe/Paris'), ('Europe/Podgorica', 'Europe/Podgorica'), ('Europe/Prague', 'Europe/Prague'), ('Europe/Riga', 'Europe/Riga'), ('Europe/Rome', 'Europe/Rome'), ('Europe/Samara', 'Europe/Samara'), ('Europe/San_Marino', 'Europe/San_Marino'), ('Europe/Sarajevo', 'Europe/Sarajevo'), ('Europe/Saratov', 'Europe/Saratov'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Europe/Skopje', 'Europe/Skopje'), ('Europe/Sofia', 'Europe/Sofia'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Europe/Tallinn', 'Europe/Tallinn'), ('Europe/Tirane', 'Europe/Tirane'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Europe/Vaduz', 'Europe/Vaduz'), ('Europe/Vatican', 'Europe/Vatican'), ('Europe/Vienna', 'Europe/Vienna'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Europe/Warsaw', 'Europe/Warsaw'), ('Europe/Zagreb', 'Europe/Zagreb'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Europe/Zurich', 'Europe/Zurich'), ('GMT', 'GMT'), ('Indian/Antananarivo', 'Indian/Antananarivo'), ('Indian/Chagos', 'Indian/Chagos'), ('Indian/Christmas', 'Indian/Christmas'), ('Indian/Cocos', 'Indian/Cocos'), ('Indian/Comoro', 'Indian/Comoro'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Indian/Mahe', 'Indian/Mahe'), ('Indian/Maldives', 'Indian/Maldives'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Indian/Mayotte', 'Indian/Mayotte'), ('Indian/Reunion', 'Indian/Reunion'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Auckland', 'Pacific/Auckland'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('Pacific/Easter', 'Pacific/Easter'), ('Pacific/Efate', 'Pacific/Efate'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Pacific/Guam', 'Pacific/Guam'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('Pacific/Midway', 'Pacific/Midway'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Pacific/Niue', 'Pacific/Niue'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('Pacific/Palau', 'Pacific/Palau'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('Pacific/Saipan', 'Pacific/Saipan'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Pacific/Wake', 'Pacific/Wake'), ('Pacific/Wallis', 'Pacific/Wallis'), ('US/Alaska', 'US/Alaska'), ('US/Arizona', 'US/Arizona'), ('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Hawaii', 'US/Hawaii'), ('US/Mountain', 'US/Mountain'), ('US/Pacific', 'US/Pacific'), ('UTC', 'UTC')], default='Asia/Kolkata', max_length=100)),
                ('caller_id', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('password_date', models.DateField(auto_now_add=True, db_index=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('audio_file', models.FileField(blank=True, upload_to='upload')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audio_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('dial_method', django.contrib.postgres.fields.jsonb.JSONField()),
                ('transfer', models.BooleanField(default=False)),
                ('conference', models.BooleanField(default=False)),
                ('thirdparty_api_status', models.BooleanField(default=False)),
                ('weburl', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('alternate_num_dial', models.BooleanField(default=False)),
                ('callback_mode', models.CharField(choices=[('self', 'self-callback'), ('queue', 'queue-callback')], default='self', max_length=20)),
                ('dnc', models.CharField(choices=[('local', 'local-dnc'), ('global', 'global-dnc')], default='local', max_length=20)),
                ('show_queue_call_count', models.BooleanField(default=False)),
                ('ibc_popup', models.BooleanField(default=False)),
                ('hopper_level', models.BigIntegerField(default='100')),
                ('portifolio', models.BooleanField(blank=True, default=False, null=True)),
                ('css', models.BooleanField(blank=True, default=False, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], db_index=True, default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('auto_feedback', models.BooleanField(blank=True, null=True)),
                ('auto_feedback_time', models.CharField(blank=True, max_length=20, null=True)),
                ('auto_progressive_time', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'get_latest_by': 'modified_date',
            },
        ),
        migrations.CreateModel(
            name='Cdr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_ip_v4', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('caller_id_name', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('caller_id_number', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('destination_number', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('context', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('start_stamp', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('answer_stamp', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('end_stamp', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('duration', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('billsec', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('hangup_cause', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('uuid', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('bleg_uuid', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('accountcode', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('read_codec', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('write_codec', models.CharField(default='', editable=False, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CdrFeedbck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_dispo', models.CharField(default='', max_length=100, null=True)),
                ('feedback', django.contrib.postgres.fields.jsonb.JSONField()),
                ('relation_tag', django.contrib.postgres.fields.jsonb.JSONField()),
                ('session_uuid', models.UUIDField(db_index=True, editable=False, null=True)),
                ('contact_id', models.CharField(blank=True, db_index=True, default='', max_length=50, null=True)),
            ],
            options={
                'ordering': ['-session_uuid'],
                'get_latest_by': 'session_uuid',
            },
        ),
        migrations.CreateModel(
            name='CSS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('raw_query', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': '-created',
            },
        ),
        migrations.CreateModel(
            name='DiallerEventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonebook', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('contact_id', models.CharField(blank=True, db_index=True, default='', max_length=50, null=True)),
                ('session_uuid', models.UUIDField(db_index=True, editable=False, null=True)),
                ('a_leg_uuid', models.UUIDField(editable=False, null=True)),
                ('b_leg_uuid', models.UUIDField(editable=False, null=True)),
                ('init_time', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('ring_time', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('ring_duration', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('connect_time', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('wait_time', models.TimeField(blank=True, default=datetime.time(0, 0), editable=False, null=True)),
                ('hold_time', models.TimeField(blank=True, default=datetime.time(0, 0), editable=False, null=True)),
                ('media_time', models.TimeField(blank=True, default=datetime.time(0, 0), editable=False, null=True)),
                ('callflow', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('callmode', models.CharField(default='', max_length=50, null=True)),
                ('customer_cid', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('destination_extension', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('transfer_history', models.TextField(default='', editable=False, null=True)),
                ('call_duration', models.TimeField(blank=True, default=datetime.time(0, 0), editable=False, null=True)),
                ('bill_sec', models.TimeField(blank=True, default=datetime.time(0, 0), editable=False, null=True)),
                ('hangup_time', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('dialed_status', models.CharField(choices=[('Connected', 'Connected'), ('Drop', 'Drop'), ('MissedCall', 'MissedCall'), ('Auto-Dialed', 'Auto-Dialed'), ('Dialed', 'Dialed'), ('Agent-Answered', 'Agent-Answered'), ('INVALID_NUMBER', 'INVALID_NUMBER')], default='', max_length=50)),
                ('hangup_cause', models.CharField(default='', editable=False, max_length=100, null=True)),
                ('hangup_cause_code', models.IntegerField(blank=True, default=None, editable=False, null=True)),
                ('channel', models.TextField(default='', editable=False, null=True)),
                ('info', models.TextField(default='', editable=False, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='callcenter.Campaign')),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='DiallerEventLog', to='sites.Site')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-init_time'],
                'get_latest_by': 'init_time',
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('permissions', models.CharField(db_index=True, default='C,R,U,D', max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NdncDeltaUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta_file', models.FileField(upload_to='ndnc')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': '-created',
            },
        ),
        migrations.CreateModel(
            name='UserVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.CharField(db_index=True, help_text='sip extension', max_length=100, unique=True)),
                ('device_pass', models.CharField(db_index=True, default=1234, help_text='Phone password', max_length=100)),
                ('domain', models.CharField(default='192.168.3.35', help_text='Server IP address', max_length=100)),
                ('level', models.IntegerField(db_index=True, default=1, help_text='Mapping an agent to a campaign', null=True)),
                ('position', models.IntegerField(db_index=True, default=1, help_text='Position in campaign')),
                ('type', models.CharField(choices=[('uuid-standby', 'uuid-standby'), ('callback', 'callback')], default='uuid-standby', help_text='We currently support 2 types, callback and uuid-standby.callback will try to reach the agent via the contact fields value.uuid-standby will try to directly bridge the call using the agent uuid', max_length=100)),
                ('contact', models.CharField(default='[call_timeout=10]user', help_text='A simple dial string can be put in here, like: user/1000@default', max_length=100)),
                ('dial_status', models.CharField(choices=[('Logged Out', 'Logged Out'), ('Available', 'Available'), ('Available (On Demand)', 'Available (On Demand)')], default='Logged Out', help_text='Define the current status of an agent.\t\t\tCheck the Agents Status table for more informations', max_length=100)),
                ('max_no_answer', models.IntegerField(db_index=True, default=3, help_text='If the agent reach this number of consecutive no answer,his status is changed to On Break automatically')),
                ('wrap_up_time', models.IntegerField(db_index=True, default=10, help_text='Allow an agent to have a delay when\t\t\tfinishing a call before receiving another one')),
                ('reject_delay_time', models.IntegerField(db_index=True, default=10, help_text='If the agent press the reject on their phone,\t\t\twe wait this defined time amount')),
                ('busy_delay_time', models.IntegerField(db_index=True, default=60, help_text='If the agent is on do not disturb,\t\t\twe wait this defined time before trying him again')),
                ('protocol', models.CharField(choices=[('SIP', 'SIP'), ('AIP', 'AIP')], default='SIP', max_length=30)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('enabled', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
                ('user', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('permissions', django.contrib.postgres.fields.jsonb.JSONField()),
                ('access_level', models.CharField(choices=[('Admin', 'Admin'), ('Manager', 'Manager'), ('Supervisor', 'Supervisor'), ('Agent', 'Agent')], db_index=True, default='Admin', max_length=50)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_role_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='TempDialerEventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_uuid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='callcenter.DiallerEventLog')),
            ],
            options={
                'ordering': ['-id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('ip_address', models.CharField(db_index=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='switch_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
            options={
                'ordering': ('created_date',),
                'unique_together': {('name', 'ip_address')},
            },
        ),
        migrations.CreateModel(
            name='SnoozedCallback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.CharField(max_length=100, null=True)),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('callback_type', models.CharField(choices=[('self', 'self-callback'), ('queue', 'queue-callback')], db_index=True, default='self', max_length=15)),
                ('snoozed_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('namespace_fields', models.CharField(max_length=1000, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='callcenter.Campaign')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='script_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='RelationTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('relation_fields', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('color_code', models.CharField(blank=True, default='#3a3f51', max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relationtag_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='PauseBreak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('break_time', models.TimeField(blank=True, null=True)),
                ('break_color_code', models.CharField(blank=True, default='#3a3f51', max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pausebreak_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(blank=True, max_length=100, null=True)),
                ('campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.CharField(max_length=100, null=True)),
                ('title', models.CharField(max_length=256, null=True)),
                ('message', models.TextField()),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('viewed', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Missedcall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.CharField(max_length=100, null=True)),
                ('caller_id', models.CharField(max_length=100, null=True)),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('status', models.CharField(choices=[('NotDialed', 'NotDialed'), ('Queued', 'Queued'), ('Dialed', 'Dialed'), ('Auto-Dialed', 'Auto-Dialed'), ('Locked', 'Locked'), ('NDNC', 'NDNC'), ('Callback', 'Callback'), ('FollowUp', 'FollowUp'), ('Snoozed', 'Snoozed'), ('Missedcall', 'Missedcall'), ('INVALID_NUMBER', 'INVALID_NUMBER'), ('Agent-Answered', 'Agent-Answered'), ('Drop', 'Drop')], db_index=True, default='NotDialed', max_length=15)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='LeadRecycle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('schedule_period', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('recycle_time', models.BigIntegerField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('schedule_type', models.CharField(blank=True, choices=[('schedule_time', 'schedule_time'), ('recycle_time', 'recycle_time')], max_length=15, null=True)),
                ('ldr_period_update', models.DateField(auto_now_add=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='callcenter.Campaign')),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('color_code', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='DNC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonebook', models.CharField(default='', max_length=50)),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('global_dnc', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dnc_campaign', to='callcenter.Campaign')),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dnc_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': '-created',
            },
        ),
        migrations.CreateModel(
            name='Disposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('dispos', django.contrib.postgres.fields.jsonb.JSONField()),
                ('dispo_type', models.CharField(choices=[('multifield', 'MultiField'), ('dropdown', 'DropDown')], default='dropdown', max_length=10)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('color_code', models.CharField(blank=True, default='#3a3f51', max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disposition_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='DialTrunk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('dial_string', models.CharField(default='freetdm/default/a', help_text='Dial String for outbound call.<br/>format: endpoint/trunk/<br/>eg. freetdm/default/a', max_length=200)),
                ('channel_count', models.BigIntegerField(default=0)),
                ('trunk_type', models.CharField(choices=[('international', 'International'), ('domestic', 'Domestic')], default='domestic', max_length=15)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dial_trunk_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
                ('switch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Switch', to='callcenter.Switch')),
            ],
            options={
                'ordering': ('created_date',),
            },
        ),
        migrations.CreateModel(
            name='CurrentCallBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(blank=True, max_length=100, null=True)),
                ('campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('phonebook', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.CharField(max_length=100, null=True)),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('status', models.CharField(choices=[('NotDialed', 'NotDialed'), ('Queued', 'Queued'), ('Dialed', 'Dialed'), ('Auto-Dialed', 'Auto-Dialed'), ('Locked', 'Locked'), ('NDNC', 'NDNC'), ('Callback', 'Callback'), ('FollowUp', 'FollowUp'), ('Snoozed', 'Snoozed'), ('Missedcall', 'Missedcall'), ('INVALID_NUMBER', 'INVALID_NUMBER'), ('Agent-Answered', 'Agent-Answered'), ('Drop', 'Drop')], db_index=True, default='NotDialed', max_length=15)),
                ('callback_title', models.CharField(default='', max_length=100, null=True)),
                ('callback_type', models.CharField(choices=[('self', 'self-callback'), ('queue', 'queue-callback')], db_index=True, default='self', max_length=15)),
                ('schedule_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('disposition', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(default='', max_length=500, null=True)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extension', models.BigIntegerField(db_index=True, help_text='Campaign DID', unique=True)),
                ('prefix', models.CharField(blank=True, help_text='The prefix is for match to the DID', max_length=30, null=True)),
                ('caller_id', models.CharField(blank=True, max_length=100, null=True)),
                ('strategy', models.CharField(choices=[('ring-all', 'Ring All'), ('longest-idle-agent', 'Longest Idle Agent'), ('round-robin', 'Round Robin'), ('top-down', 'Top Down'), ('agent-with-least-talk-time', 'Agent With Least Talk Time'), ('agent-with-fewest-calls', 'Agent With Fewest Calls'), ('sequentially-by-agent-order', 'Sequentially By Agent Order'), ('random', 'Random')], default='longest-idle-agent', help_text='The strategy defines how calls are distributed in a queue. A table of different strategies can be found below', max_length=100)),
                ('dial_ratio', models.FloatField(choices=[(1.0, '1.0'), (1.5, '1.5'), (2.0, '2.0'), (2.5, '2.5'), (3.0, '3.0'), (3.5, '3.5'), (4.0, '4.0'), (4.5, '4.5'), (5.0, '5.0')], default=1, help_text='Calls thrown per agent')),
                ('variables', models.TextField(default='originate_timeout=25', help_text='Use to set channel variables, separate them with comma and do not use any space')),
                ('ndnc_scrub', models.BooleanField(default=False, help_text='Scrub NDNC numbers on the fly')),
                ('record_template', models.CharField(default='default', help_text='Use the record-directory to save your campaign recording on specific directory', max_length=255, verbose_name='Recording Directory')),
                ('time_base_score', models.CharField(default='system', help_text='This can be either queue or system (system is the default).', max_length=100)),
                ('max_wait_time', models.IntegerField(db_index=True, default=0, help_text='Default to 0 to be disabled. Any value are in seconds,and will define the delay before we quit the callcenter application IF the member have not been answered by an agent')),
                ('max_wait_time_with_no_agent', models.IntegerField(db_index=True, default=0, help_text='Default to 0 to be disabled.Any value are in seconds, and will define the length oftime a queue be empty of available (on a call or not) before we disconnect members')),
                ('max_wait_time_with_no_agent_time_reached', models.IntegerField(db_index=True, default=5, help_text='Default to 5. Any value are in seconds, and will define the length of time after themax-wait-time-with-no-agent is reached to reject new caller.')),
                ('tier_rules_apply', models.BooleanField(default=False, help_text='Can be True or False. This defines if we should apply the following tier rules when a caller advances through a queues tiers. If False, they will use all tiers with no wait')),
                ('tier_rule_wait_second', models.IntegerField(db_index=True, default=100, help_text='The time in seconds that a caller is required\t\t\t\t\tto wait before advancing to the next tier')),
                ('tier_rule_wait_multiply_level', models.BooleanField(default=False, help_text='Can be True or False. If False, then once tier-rule-wait-second is passed, the caller is offered to all tiers in order (level/position)')),
                ('tier_rule_no_agent_no_wait', models.BooleanField(default=False, help_text="Can be True or False. If True, callers will skip tiers that don't have agents available")),
                ('discard_abandoned_after', models.IntegerField(db_index=True, default=100, help_text='The number of seconds before we completely remove an abandoned member from the queue')),
                ('abandoned_resume_allowed', models.BooleanField(default=False, help_text='Can be True or False. If True, a caller who has abandoned the queue can re-enter and resume their previous position in that queue')),
                ('dialtimeout', models.CharField(blank=True, max_length=10, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='callcenter.Campaign')),
                ('moh_sound', models.ForeignKey(blank=True, help_text='The system will playback whatever you specify to incoming calls or Hold', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AudioFile', to='callcenter.AudioFile')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('schedule_days', models.CharField(choices=[('all_days', 'All Days'), ('mon_to_fri', 'Mon-Fri'), ('custom', 'Custom')], default='all_days', max_length=10)),
                ('schedule', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_schedule_created_by', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site')),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='breaks',
            field=models.ManyToManyField(blank=True, null=True, to='callcenter.PauseBreak'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campaign',
            name='css_query',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='css_query', to='callcenter.CSS'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='disposition',
            field=models.ManyToManyField(blank=True, null=True, to='callcenter.Disposition'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='group',
            field=models.ManyToManyField(blank=True, to='callcenter.Group'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='relation_tag',
            field=models.ManyToManyField(blank=True, null=True, to='callcenter.RelationTag'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_schedule', to='callcenter.CampaignSchedule'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='site',
            field=models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='switch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_switch', to='callcenter.Switch'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='trunk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trunk', to='callcenter.DialTrunk'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='users',
            field=models.ManyToManyField(blank=True, null=True, related_name='campaign_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CallDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonebook', models.CharField(default='', max_length=50, null=True)),
                ('contact_id', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('customer_cid', models.CharField(default='', max_length=50, null=True)),
                ('callflow', models.CharField(default='', max_length=50, null=True)),
                ('callmode', models.CharField(default='', max_length=50, null=True)),
                ('destination_extension', models.CharField(default='', max_length=50, null=True)),
                ('dialed_status', models.CharField(choices=[('Connected', 'Connected'), ('Drop', 'Drop'), ('MissedCall', 'MissedCall'), ('Auto-Dialed', 'Auto-Dialed'), ('Dialed', 'Dialed'), ('Agent-Answered', 'Agent-Answered'), ('INVALID_NUMBER', 'INVALID_NUMBER')], default='', max_length=50)),
                ('session_uuid', models.UUIDField(db_index=True, null=True)),
                ('a_leg_uuid', models.UUIDField(null=True)),
                ('b_leg_uuid', models.UUIDField(null=True)),
                ('predictive_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('progressive_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('preview_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('init_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('ring_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('ring_duration', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('connect_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('wait_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('predictive_wait_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('hold_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('media_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('bill_sec', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='Talk Time')),
                ('call_duration', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('feedback_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='Wrap-Up Time')),
                ('cfc_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='conference_numbers')),
                ('internal_tc_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='internal transfer number')),
                ('external_tc_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='external transfer number')),
                ('hangup_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('hangup_cause', models.CharField(default='', max_length=100, null=True)),
                ('hangup_cause_code', models.IntegerField(blank=True, default=None, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='callcenter.Campaign')),
                ('site', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CallDetail', to='sites.Site')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='CallBackContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(blank=True, max_length=100, null=True)),
                ('campaign', models.CharField(blank=True, max_length=100, null=True)),
                ('phonebook', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.CharField(max_length=100, null=True)),
                ('numeric', models.CharField(db_index=True, default='', max_length=50, null=True)),
                ('alt_numeric', models.CharField(default='', max_length=50, null=True)),
                ('first_name', models.CharField(default='', max_length=50)),
                ('last_name', models.CharField(default='', max_length=50)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('callback_title', models.CharField(default='', max_length=100, null=True)),
                ('status', models.CharField(choices=[('NotDialed', 'NotDialed'), ('Queued', 'Queued'), ('Dialed', 'Dialed'), ('Auto-Dialed', 'Auto-Dialed'), ('Locked', 'Locked'), ('NDNC', 'NDNC'), ('Callback', 'Callback'), ('FollowUp', 'FollowUp'), ('Snoozed', 'Snoozed'), ('Missedcall', 'Missedcall'), ('INVALID_NUMBER', 'INVALID_NUMBER'), ('Agent-Answered', 'Agent-Answered'), ('Drop', 'Drop')], db_index=True, default='NotDialed', max_length=15)),
                ('dialcount', models.IntegerField(default=1)),
                ('callback_type', models.CharField(choices=[('self', 'self-callback'), ('queue', 'queue-callback')], db_index=True, default='self', max_length=15)),
                ('schedule_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('disposition', models.CharField(blank=True, max_length=100, null=True)),
                ('comment', models.CharField(default='', max_length=500, null=True)),
                ('customer_raw_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('site', models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='AgentActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(blank=True, max_length=255, null=True)),
                ('event_time', models.DateTimeField(blank=True, null=True)),
                ('tos', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('app_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('campaign_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dialer_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('wait_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='Wait Time')),
                ('idle_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='Idle Time')),
                ('media_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('spoke_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('preview_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('progressive_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('predictive_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('predictive_wait_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('feedback_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('break_type', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('break_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('hold_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('mute_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('transfer_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True)),
                ('pause_progressive_time', models.TimeField(blank=True, default=datetime.time(0, 0), null=True, verbose_name='Pause Progressive Time')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-event_time'],
                'get_latest_by': '-event_time',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_group', to='callcenter.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='reporting_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_to', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='site',
            field=models.ForeignKey(default=1, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='User_Role', to='callcenter.UserRole'),
        ),
    ]
