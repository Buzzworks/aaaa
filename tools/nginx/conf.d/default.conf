# the upstream component nginx needs to connect to
upstream uwsgi {
    #server unix:/home/app.sock; # for a file socket
    server 127.0.0.1:8001; # Mention Web Application Server IP address/domain name
}
upstream socket_ws {
    ip_hash;
    server  127.0.0.1:3232 weight=5; # Mention WebSocket Server IP address/domain name
}
upstream socket_nodes_ws {
    ip_hash;
    server  127.0.0.1:7443 weight=20; # Mention telephony Server IP address/domain name
}
upstream socket_nodes_rpc {
    ip_hash;
    server  127.0.0.1:8080 weight=20; # Mention telephony Server IP address/domain name
}
# configuration of the server
server {
    # the port your site will be served on
    listen    80;
    # index  index.html;
    # the domain name it will serve for
    charset     utf-8;
    #client_max_body_size 75M;   # adjust to taste
    client_body_timeout 60s;
    uwsgi_read_timeout 60s;
    # Django media
    # location /media  {
    #     alias /docker_api/static/media;  # your Django project's media files - amend as required
    # }
    location /static {
        alias /home/app/static; # your Django project's static files - amend as required
    }
    location /nginx/status {
        stub_status on;
        # access_log /usr/local/nginx/logs/status.log;
        access_log off;
        auth_basic "NginxStatus";
    }
    location / {
        #uwsgi_param Host $host;
        #uwsgi_param X-Real-IP $remote_addr;
        #uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        #uwsgi_param X-Forwarded-Proto $scheme;
        #uwsgi_param UWSGI_SCHEME $scheme;
        #add_header Cache-Control private;
        #add_header Cache-Control no-cache;
        #add_header Cache-Control no-store;
        #add_header Cache-Control must-revalidate;
        #add_header Pragma no-cache;
        include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
        uwsgi_pass  uwsgi;
        #proxy_pass http://unix:/home/app.sock
        #proxy_connect_timeout 300s;
        #proxy_read_timeout 1800;
        #uwsgi_read_timeout 1800;
    }
}
server {
        listen 443 default_server ssl;
        ssl_certificate /etc/ssl/flexydial.crt;
        ssl_certificate_key /etc/ssl/flexydial.key;
        ssl_certificate /etc/ssl/wss.pem;
        ssl_certificate_key /etc/ssl/wss.pem;
        charset     utf-8;
        #client_max_body_size 75M;   # adjust to taste
        client_body_timeout 300s;
        uwsgi_read_timeout 300s;
        # Django media
        # location /media  {
        #     alias /docker_api/static/media;  # your Django project's media files - amend as required
        # }
        location /static {
            alias /home/app/static; # your Django project's static files - amend as required
        }
        location /nginx/status {
            stub_status on;
            # access_log /usr/local/nginx/logs/status.log;
            access_log off;
            auth_basic "NginxStatus";
        }
        location / {
            include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
            uwsgi_pass  uwsgi;
        }
}
server {
        listen 3232 default_server ssl;
        listen [::]:3232 default_server ssl;
        ssl_certificate /etc/ssl/flexydial.crt;
        ssl_certificate_key /etc/ssl/flexydial.key;
        ssl_certificate /etc/ssl/wss.pem;
        ssl_certificate_key /etc/ssl/wss.pem;
        server_name _;
        location / {
         proxy_pass http://socket_ws;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 86400;
        }
}
server {
        listen 7444 default_server ssl;
        ssl_certificate /etc/ssl/flexydial.crt;
        ssl_certificate_key /etc/ssl/flexydial.key;
        ssl_certificate /etc/ssl/wss.pem;
        ssl_certificate_key /etc/ssl/wss.pem;

       server_name _;
       location / {
          proxy_pass https://socket_nodes_ws;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 86400;
        }
}
server {
        listen 8080 default_server;

       server_name _;
       location / {
          proxy_pass http://socket_nodes_rpc;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 86400;
        }
}